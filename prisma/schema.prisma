generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// ... (other models remain unchanged)

// Updated UserProfile model with level and badges
model UserProfile {
  id                 String   @id @default(cuid())
  userId             String   @unique
  healthGoals        String?
  dietaryPreferences String?
  level              Int      @default(0)
  badges             String[] @default([])

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("userProfiles")
}

// User model definition
model User {
  id            String        @id @default(cuid())
  email         String        @unique
  name          String?
  userProfiles  UserProfile[]

  @@map("users")
}

// Workspace model definition
model Workspace {
  id           String   @id @default(cuid())
  workspaceCode String   @unique
  inviteCode   String   @unique

  @@map("workspaces")
}

// ... (rest of the file remains unchanged)
